{"version":3,"sources":["assets/image1.jpg","assets/image2.jpg","components/Statesinreact.js","components/Componentlifecyclemethods.js","components/Lifecyclemethods.js","components/nesting/Child.js","components/nesting/Parent.js","App.js","reportWebVitals.js","index.js"],"names":["emp1","empId","empName","designation","salary","age","achievements","image","image2","emp2","image1","Statesinreact","employees","state","selectedEmp","employee","note","className","this","style","width","src","alt","onClick","setState","map","index","marginLeft","createCard","Component","course","id","name","educator","Componentlifecyclemethods","props","courseData","selected","clickHandler","console","log","exitComponent","ReactDOM","unmountComponentAtNode","document","getElementById","componentWillUnmount","users","userDetails","Lifecyclemethods","start","bind","secondElapsed","alert","interval","setInterval","Child","action","Parent","App","counter","message","incrementCounter","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.2aaf2c2b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/image1.79d9af15.jpg\";","export default __webpack_public_path__ + \"static/media/image2.6a19c5a9.jpg\";","import React, { Component } from \"react\";\r\nimport image1 from '../assets/image1.jpg';\r\nimport image2 from '../assets/image2.jpg';\r\nconst emp1 = {\r\n  empId: 101,\r\n  empName: \"Sharad\",\r\n  designation: \"Manager\",\r\n  salary: 100000,\r\n  age: 48,\r\n  achievements: \"No Major achievements so far\",\r\n  image:image2\r\n};\r\nconst emp2 = {\r\n  empId: 102,\r\n  empName: \"Shreyas\",\r\n  designation: \"CEO\",\r\n  salary: 10000000,\r\n  age: 23,\r\n  achievements: \"HE is the master of achievements\",\r\n  image:image1\r\n};\r\n\r\nclass Statesinreact extends Component {\r\n  employees = [emp1, emp2];\r\n  state = { selectedEmp: null };\r\n\r\n  createCard(employee) {\r\n    var note = null;\r\n    var achievements = null;\r\n    if (employee.age < 25) {\r\n      note = <span className=\"text-info\">Fresher</span>;\r\n    }\r\n    if (this.state.selectedEmp === employee.empId) {\r\n      achievements = (\r\n        <p>\r\n          <i>{employee.achievements}</i>\r\n        </p>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <div className=\"card\"  style={{width:\"300px\"}}>\r\n            <img className=\"card-img-top\" src={employee.image}alt={employee.empName}/>\r\n          <h1 className=\"card-title\">{employee.empName}</h1>\r\n          <p className=\"card-text\">\r\n            <span>Employee Id is {employee.empId}</span><br/>\r\n            <span>Employee name is {employee.empName}</span><br/>\r\n            <span>Employee Salary is {employee.salary}</span><br/>\r\n            <span>Employee Designation is {employee.designation}</span><br/>\r\n            <span>Employee Age is {employee.age} <br/> {note}</span><br/>\r\n          </p>\r\n          {achievements}\r\n          <button className=\"btn btn-primary\">Edit</button>\r\n          <button\r\n            className=\"btn btn-success m-1\"\r\n            onClick={() => {\r\n              this.setState({ selectedEmp: employee.empId });\r\n            }}\r\n          >\r\n            View\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"text-center text-primary\">Employee Details</div>\r\n        <div className=\"row\" >\r\n          {this.employees.map((employee, index) => {\r\n            return <div style={{marginLeft:\"20px\"}}>{this.createCard(employee)}</div>;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statesinreact;\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst course = [\r\n  { id: 1, name: \"Angular\", educator: \"Rob\" },\r\n  { id: 2, name: \"React JS\", educator: \"John\" },\r\n  { id: 3, name: \"Ajax\", educator: \"Mack\" },\r\n];\r\n\r\nclass Componentlifecyclemethods extends Component {\r\n  state = {\r\n    courseData: course,\r\n    selected: false,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"Initialization phase constructor excecuted\");\r\n  }\r\n  componentWillMount() {\r\n    console.log(\"Mounting Phase: componentWillMount() will be excecuted\");\r\n  }\r\n  render() {\r\n    var users = this.state.courseData;\r\n    console.log(\"Mounting Phase: render() excecuted\");\r\n\r\n    return (\r\n      <div>\r\n        <h4>UI Courses List</h4>\r\n        <div>\r\n          {users.map((userDetails) => {\r\n            return (\r\n              <div key={userDetails.id}>\r\n                <b>Course:</b>\r\n                {userDetails.name}\r\n                <br />\r\n                <b>Educator:</b>\r\n                {userDetails.educator}\r\n                <br />\r\n                <button onClick={this.clickHandler}>Details</button>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <button onClick={this.exitComponent}>Exit</button>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    console.log(\"Mounting Phase: 'componentDidMount()' excecuted\");\r\n  }\r\n  clickHandler = () => {\r\n    console.log(\"Details Button is clicked State will change...\");\r\n    this.setState({ selected: true });\r\n  };\r\n  exitComponent = () => {\r\n    console.log(\"Exit button is clicked, component will be destroyed\");\r\n    ReactDOM.unmountComponentAtNode(document.getElementById(\"root\"));\r\n  };\r\n  componentWillUnmount = () => {\r\n    console.log(\"Un-Mounting Phase: 'component will unmount' excecuted\");\r\n  };\r\n}\r\n\r\nexport default Componentlifecyclemethods;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Lifecyclemethods extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.start = this.start.bind(this);\r\n    this.state = { secondElapsed: 0 };\r\n  }\r\n  start() {\r\n    this.setState({ secondElapsed: this.state.secondElapsed + 1 });\r\n  }\r\n  // COMPONENT WILL MOUNT IS DEPRECATED\r\n  componentWillMount() {\r\n    alert(\"Component Mounted\");\r\n  }\r\n  componentDidMount() {\r\n    this.interval = setInterval(this.start, 1000);\r\n  }\r\n\r\n  render() {\r\n    console.log(\r\n      \"render exccuting after change in state in component did mount\"\r\n    );\r\n    return (\r\n      <div>\r\n        <h2>Second Elapsed: {this.state.secondElapsed}</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Lifecyclemethods;\r\n","import React, { Component } from 'react';\r\n\r\nclass Child extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Hi Im child component inside parent component</h1>\r\n                <h3>Im child rendered in parent component {this.props.action}</h3>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Child;","import React, { Component } from \"react\";\r\nimport Child from \"./Child\";\r\n\r\nclass Parent extends Component {\r\n  action =\"'props from parent'\";\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <h2>\r\n            <b>Nesting</b>\r\n          </h2>\r\n          <h1>Hi Im Parent Component</h1>\r\n          <Child />\r\n          <Child action={this.action} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Parent;\r\n","import React, { Component } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Statesinreact from \"./components/Statesinreact\";\nimport Componentlifecyclemethods from \"./components/Componentlifecyclemethods\";\nimport Lifecyclemethods from \"./components/Lifecyclemethods\";\nimport Parent from \"./components/nesting/Parent\";\nclass App extends Component {\n  state = {\n    counter: 0,\n    message: \"\",\n  };\n  incrementCounter=()=>{\nthis.setState({counter:this.state.counter+1,message:\"Button Clicked\"})\n\n  }\n  render() {\n    return <div>\n      <button className=\"btn btn-primary\" onClick={this.incrementCounter}>Click</button>\n      <h3 style={{color:\"lightblue\"}}>{this.state.message} has clicked {this.state.counter} times</h3>\n      <Statesinreact/>\n      <Componentlifecyclemethods/>\n      <Lifecyclemethods/>\n      <Parent/>\n    </div>;\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}